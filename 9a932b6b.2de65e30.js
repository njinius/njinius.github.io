(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{112:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(6),a=(n(0),n(155)),i={id:"github-actions-3",slug:"github-actions-basics-3",title:"GitHub Actions - Part 3",description:"GitHub Actions - Basics Part 3"},s={unversionedId:"tutorials/text-tutorials/software/github/github-actions-3",id:"tutorials/text-tutorials/software/github/github-actions-3",isDocsHomePage:!1,title:"GitHub Actions - Part 3",description:"GitHub Actions - Basics Part 3",source:"@site/docs/tutorials/text-tutorials/software/github/github-actions-3.md",slug:"/tutorials/text-tutorials/software/github/github-actions-basics-3",permalink:"/docs/tutorials/text-tutorials/software/github/github-actions-basics-3",version:"current",sidebar:"textTutorialItems",previous:{title:"GitHub Actions - Part 2",permalink:"/docs/tutorials/text-tutorials/software/github/github-actions-basics-2"},next:{title:"Syntax",permalink:"/docs/tutorials/text-tutorials/software/yaml/yaml-basics"}},c=[{value:"Creating a workflow",id:"creating-a-workflow",children:[]},{value:"Viewing results and logs",id:"viewing-results-and-logs",children:[]},{value:"Source code",id:"source-code",children:[]}],l={rightToc:c};function u(e){var t=e.components,i=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,i,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"creating-a-workflow"},"Creating a workflow"),Object(a.b)("p",null,"From the root directory, create a YAML file within a '.github/workflows' directory of your repo. In this example, we\ncreate a YAML file called deploy.yml"),Object(a.b)("p",null,"The complete YAML file contains the following code"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"# This is a basic workflow to help you get started with Actions\n\nname: Example Workflow\n\n# Controls when the action will run. \non:\n  # Triggers the workflow on push events but only for the 'main' branch\n  push:\n    branches: [ main ]\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  example-job:\n    name: Example Job\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check out repository code\n        uses: actions/checkout@v2\n      - name: Run my test script\n        env:\n          my-var: True\n        run: |\n          python ./src/my-test-script.py\n")),Object(a.b)("p",null,'In this example, the workflow will trigger on a code push to the main branch. We have a single job called "Example Job"\nthat will run on the latest version of ubuntu. The job will execute two steps'),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"The first step will use a community action to check-out the current branch within the ubuntu agent."),Object(a.b)("li",{parentName:"ul"},"In the second step, we set an environment variable called 'my-var' to the value of 'true' and run a python script\nstored within the ",Object(a.b)("strong",{parentName:"li"},"src")," directory of the repo.")),Object(a.b)("p",null,"The python file contains the following code and is stored in ",Object(a.b)("strong",{parentName:"p"},"src/")," directory under then name ",Object(a.b)("strong",{parentName:"p"},"my-test-script.py")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"import os, sys\n\n# Get environment variable we set in our workflow file\nenv_var = os.getenv('my-var').lower()\nexit_code = 0\n\n# If the value was set to true the test passed otherwise fail\nif env_var == \"true\":\n    print('Test Pass')\nelse:\n    print('Test Fail')\n    exit_code = 1\n\n# Print out the environment variable\nprint(\"I set my environment variable to:\")\nprint(env_var)\n\n# Exit\nsys.exit(exit_code)\n")),Object(a.b)("p",null,"In the python script, we retrieve the environment variable defined in our workflow file and check the value. If the\nvalue is set to true, we print a success message and return a 'success' exit code (0); otherwise, we print a failure\nmessage and return a failure exit code."),Object(a.b)("h2",{id:"viewing-results-and-logs"},"Viewing results and logs"),Object(a.b)("p",null,"To view the results, click on the Actions tab on your github repository."),Object(a.b)("p",null,Object(a.b)("img",{src:n(253).default})),Object(a.b)("p",null,"By default, all workflow runs are displayed. Click on the workflow run you wish to view logs or results for. "),Object(a.b)("p",null,Object(a.b)("img",{src:n(254).default})),Object(a.b)("p",null,"All Jobs and statuses for each job can be viewed on the left-hand side. Select the job you wish to inspect closer.\nA window displaying all the log information for the job appears. You can also use the log search to search\nthrough the logs."),Object(a.b)("p",null,Object(a.b)("img",{src:n(255).default})),Object(a.b)("h2",{id:"source-code"},"Source code"),Object(a.b)("p",null,"The source code and material used for the examples can be found ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/njinius/njinius.codesamples"}),"here")))}u.isMDXComponent=!0},155:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=u(n),f=r,h=b["".concat(i,".").concat(f)]||b[f]||p[f]||a;return n?o.a.createElement(h,s(s({ref:t},l),{},{components:n})):o.a.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},253:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/results_1-7d5735e2cf7a5fe5181f170610161122.png"},254:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/results_2-952e35ea8d88b1e6615adf1b88e38397.png"},255:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/results_3-001635cbecee72e2fe5ccc20fa7fd031.png"}}]);